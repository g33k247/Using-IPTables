///////////////PROJECT #1 - IPTABLES\\\\\\\\\\\\\\
^^Objective: Create a turnkey set of virtual machines with networking and other parameters pre-configured for use in gaining experience with Linux iptables. Create a Lab Exercises worksheet with several challenges for the user to gain hands-on experience using the virtual machines. Incorproate version control and make the project accessible for download.

{{Specifications for Virtual Machines
- Created three (3) VMs, based on Ubuntu 14.04 LTS, using Oracle's VirtualBox software.

	~FIREWALL
	creds: root / 1qaz!QAZ
	Hostname: firewall
	OS: Ubuntu 14.04 LTS
	eth0: 10.1.1.1/24
	eth1: 10.2.2.1/24
	services: OpenSSH server, Virtual Machine Host (on install)

	~NORTH CLIENT
	creds: root / 1qaz!QAZ
	Hostname: northclient
	OS: Ubuntu 14.04 LTS
	eth0: 10.1.1.10/24
	services: OpenSSH server, DNS server, LAMP server, Mail server, Samba file server, Virtual Machine Host (on install)

	~SOUTH CLIENT
	creds: root / 1qaz!QAZ
	Hostname: southclient
	OS: Ubuntu 14.04 LTS
	eth0: 10.2.2.10/24
	services: OpenSSH server, DNS server, LAMP server, Mail server, Samba file server, Virtual Machine Host (on install)

{{Configuration for Virtual Machines
	-- networking configs on each machine
		-- edited etc/interfaces/eth0.conf
		-- set dhcp and static ip addr
		-- rebooted each machine and tested ip parameters	
	-- ensured iptables installed/active on each machine
		-- created rc.iptables.sh script on the firewall VM, in /etc/init.d/rc.iptables.sh
		-- flushed iptables for start state of the firewall VM using the 'rc.iptables.sh start' command
	-- created a post-config snapshot for each of the VMs
	
{{Lab Exercises Document
	-- draft a minimum of three (3) scenarios
	-- test/refine
	-- finalized the exercise sheet
	-- saved to PDF
	
{{Packaged VMs and Documentation
	-- https://github.com/g33k247/using_iptables
	-- flushed tables & shutdown VMs
	-- saved and exported the VMs
	-- determined GitHub was the best method to host the project files (for version control)
	-- determined OneDrive account best option to host .ova file (901MB) and uploaded link to Github repo
	
{{Lessons Learned
	-- Exporting VMs as appliances: I originally used a .vmdk file for my virtual media (hard disk). When I exported the VMs as an appliance (OVF 2.0), the OVA file is a mere 18kb and didn't contain the disk images. Because the .vmdk was on a SCSI controller rather than a .vdi on a SATA controller, I moved it to the SATA controller. This allowed the export appliance process to function correctly, exporting the VM included the disk image.
	-- Github imposes a 25MB file size limitation, so I had to find an alternate hosting source for the VMs